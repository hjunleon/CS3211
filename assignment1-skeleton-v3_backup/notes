Resting orders should be arranged from chepest sell side to ex sell side, then from earliest to latest sent ( i think cant be interrupted )
 - This probably means i can't have order that front-runs another order, such as in cases where the first order is being matched while the second one can't be matched and is placed at the front 
 - Receiving of orders should interrupt others at least for the timestamp arrival 

HashTable, string key is the stock name. 2 tables for buy and sell side 

Cannot merge orders, but can match multiple resting orders

Visible side effects matter more than actual sequentially correcct

Each partial match is an atomic operation, but can still interleave (https://stackoverflow.com/questions/23048144/what-is-process-interleaving-in-the-realm-of-concurrency)

Each order should have clientId attached somehow

Single land bridge problem: https://flylib.com/books/en/2.752.1.48/1/
